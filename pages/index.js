import Head from "next/head";
import react, { useState, useEffect } from "react";
import { useSelector, useDispatch } from "react-redux";
import cookie from "cookie";
import Image from "next/image";
import Navbar from "../components/Navbar";
import Left from "../components/Left";
import styles from "../styles/Home.module.css";
import Right from "../components/Right";
import Folder from "../components/Folder";
import Files from "../components/Files";
import NavRouter from "../components/NavRouter";
import axios from "axios";
import { useRouter } from "next/router";

export default function Home({ files = [], sizes }) {
  const router = useRouter();
  const [folders, setFolders] = useState([]);
  const [fetchAgain, setFetchAgain] = useState(true);
  const userInfo = useSelector((state) => state.user.userInfo);
  const recentFiles = useSelector((state) => state.file.recentFiles);

  console.log({ sizes });

  useEffect(() => {
    if (!userInfo) {
      router.push("/login");
    }
    const fetch = async () => {
      try {
        const { data } = await axios.get("/api/folder/root", {
          headers: {
            Authorization: `Bearer ${userInfo.token}`,
          },
        });
        setFolders(data);
      } catch (error) {
        console.log(error);
      }
    };
    fetch();
  }, [fetchAgain]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <div className={styles.main}>
        <div className={styles.left}>
          <Left sizes={sizes} />
        </div>
        <div className={styles.mid}>
          <NavRouter />
          <Folder folders={folders} setFetchAgain={setFetchAgain} />
          {files.length > 0 && (
            <Files
              files={files}
              inFolder={false}
              setFetchAgain={setFetchAgain}
              title={"Recently Uploaded Files"}
            />
          )}

          {recentFiles.length > 0 && (
            <Files
              files={recentFiles}
              setFetchAgain={setFetchAgain}
              inFolder={false}
              title={"Recently Opened Files"}
              recent={true}
            />
          )}
        </div>
        <div className={styles.right}>
          <Right />
        </div>
      </div>
    </div>
  );
}

export async function getServerSideProps(context) {
  const parsedCookies = cookie.parse(
    context.req.headers.cookie ? context.req.headers.cookie : ""
  );
  const userInfo = parsedCookies.userInfo;

  if (!userInfo) {
    return { props: {}, redirect: "/login" };
  }

  const token = JSON.parse(userInfo).token;
  // const accessToken = JSON.parse(token);

  console.log({ type: typeof token });
  const { data: files } = await axios.get(
    "http://localhost:3000/api/file/recent",
    {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    }
  );

  const res = await axios.get(`${process.env.BASE_URL}/api/file/size`, {
    headers: {
      Authorization: `Bearer ${token}`,
    },
  });

  // Pass data to the page via props
  return { props: { files, sizes: res.data } };
}
